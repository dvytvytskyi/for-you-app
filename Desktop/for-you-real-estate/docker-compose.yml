version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: for-you-real-estate-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: for_you_real_estate
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - for-you-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: for-you-real-estate-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - for-you-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Uncommnet для запуску backend у Docker
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: for-you-real-estate-backend
  #   restart: unless-stopped
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     - NODE_ENV=development
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   volumes:
  #     - ./backend:/app
  #     - /app/node_modules
  #   networks:
  #     - for-you-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  for-you-network:
    driver: bridge

